{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xDD4D26e8aE4E6016fF1Cf31A4dd0dc097aE94fB8",
    "txHash": "0xc7bf1829aea1bfa7dd03ea92e71dcb35c6625f9d42ff46271999fb00be1d6196"
  },
  "proxies": [
    {
      "address": "0xCe3b3f0defeBcF6e454Fc485eb88bbE99356471c",
      "txHash": "0xd42f07d37d96e176d1e1f568a9619f1962f0f71a97330948195ec26fdd308d1e",
      "kind": "transparent"
    },
    {
      "address": "0xd6cE276576d198dF676b1382da185838211aaa57",
      "txHash": "0x8338dfa79ecf5397960dddb9e6327e380f0f4d3b008320d07610d408b737bda1",
      "kind": "transparent"
    },
    {
      "address": "0xC1904A8dD83eAa2FB2f9eC879B1E54C1d99b55D5",
      "txHash": "0xd468073601458f2ba45cb5060e2d89853f746a090342e97da6861ee3777e9092",
      "kind": "transparent"
    },
    {
      "address": "0x83ddEe81DFD27394665B73733272d645DB5B209F",
      "txHash": "0xdd29f538c245b00de469469cea9f88d3b8575354cfc7786cdeee7286ab3dcd85",
      "kind": "transparent"
    },
    {
      "address": "0x15685E7DB6bD97775f0Eda6AF7C8A218d5B61212",
      "txHash": "0xd17a22d3fcb55ea93563de4eb7d1c9796b496daf4a8578625d6e2406dcc43588",
      "kind": "transparent"
    },
    {
      "address": "0x32eFCc0c6577378597a205523B7034222996f1C5",
      "txHash": "0x12362d7560ff62681fd0fdfc559701cf6a96b7471e4c447be1c9f0ef9c04c48e",
      "kind": "transparent"
    },
    {
      "address": "0x1E4B8D46efEEA3803A1Ef84b163f6299d4fe41c4",
      "txHash": "0x554c10b028bc2f38e15cbf509639e178dc04d9e821983138be77c40e1ee3787c",
      "kind": "transparent"
    },
    {
      "address": "0xA1e6Fa4ebcA0A5ea473a7178F91D9599254c4993",
      "txHash": "0x14946c66d4f60eb42548ed74fa85e538859a3b32eb525c1950a3060e7dd8054c",
      "kind": "transparent"
    },
    {
      "address": "0x69491ce72b32aeaA08bb1C50f726905eDa8a8420",
      "txHash": "0x4a47bd9de0983a9deabb65caac6224c7472b058b00e412736079570e50f2ee34",
      "kind": "transparent"
    },
    {
      "address": "0xd885af705318f246d0A9F77b6f7f3ecEE57E55A0",
      "txHash": "0x51c71e16588f578f307610b057d113c0b301c01d82f2c74173fe9c08f5ecb960",
      "kind": "transparent"
    },
    {
      "address": "0x558c396973B7adD79E1707ab4D9f9b59e0C5CF3C",
      "txHash": "0x1e2eed665cd8e45681589d8c00889db239327a18ee1370baa56b463de192fc09",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9eca53db3f718f3efd6e67a50e47bdf00c41ea0777eb4861fb6a78d47ba9aead": {
      "address": "0xa240F0a483a0Ab91ccE0Bc1ea5d95cDEcb2D6A08",
      "txHash": "0x4efb8fe15c909e41d1294c252205acaa0985fbc11f378b4de5e73947a3501824",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "81512e3d254a4cb882a73166a808e1d317c7d384b41eb0757edcc87f63fb03f1": {
      "address": "0x38817207393a4bD35A0Cca088098d00C8495119D",
      "txHash": "0x6936ef9e8668f71311fd35e1908f0c5b405405fce76a6c67677672e195cf75a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PriceHelperStorage",
            "label": "controllerAddress",
            "type": "t_address",
            "src": "PriceHelperStorage.sol:20"
          },
          {
            "contract": "PriceHelperStorage",
            "label": "pairs",
            "type": "t_mapping(t_uint256,t_struct(Pair)4779_storage)",
            "src": "PriceHelperStorage.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Pair)4779_storage)": {
            "label": "mapping(uint256 => struct PriceHelperStorage.Pair)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Pair)4779_storage": {
            "label": "struct PriceHelperStorage.Pair",
            "members": [
              {
                "label": "externalProviderAddress",
                "type": "t_address"
              },
              {
                "label": "chLinkDecimals",
                "type": "t_uint256"
              },
              {
                "label": "reciprocalPrice",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d2cc3379c156727cb3c2b5d210650229326e65703411ed62099f719f1401b221": {
      "address": "0xe2ABb5cE922aCf1EcEb4Ec252917186aDB7BC715",
      "txHash": "0x7af4ae08b92e8a37fc51726750205550c0190f260558ac284135737ed4459cc4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "marketsCounter",
            "type": "t_uint256",
            "src": "IncentivesControllerStorage.sol:43"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "rewardsTokenAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:45"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "mktHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:46"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "priceHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:47"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarkets",
            "type": "t_mapping(t_uint256,t_struct(Market)3907_storage)",
            "src": "IncentivesControllerStorage.sol:49"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarketsRewards",
            "type": "t_mapping(t_uint256,t_struct(MarketRewards)3922_storage)",
            "src": "IncentivesControllerStorage.sol:50"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheARewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3935_storage))",
            "src": "IncentivesControllerStorage.sol:53"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheBRewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3935_storage))",
            "src": "IncentivesControllerStorage.sol:54"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrAPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:56"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrBPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:57"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trARewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "IncentivesControllerStorage.sol:59"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trBRewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "IncentivesControllerStorage.sol:60"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "historicalRewardsTrAPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool))))",
            "src": "IncentivesControllerStorage.sol:62"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "historicalRewardsTrBPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool))))",
            "src": "IncentivesControllerStorage.sol:63"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Market)3907_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.Market)"
          },
          "t_struct(Market)3907_storage": {
            "label": "struct IncentivesControllerStorage.Market",
            "members": [
              {
                "label": "protocol",
                "type": "t_address"
              },
              {
                "label": "aTranche",
                "type": "t_address"
              },
              {
                "label": "bTranche",
                "type": "t_address"
              },
              {
                "label": "protocolTrNumber",
                "type": "t_uint256"
              },
              {
                "label": "balanceFactor",
                "type": "t_uint256"
              },
              {
                "label": "extProtocolPercentage",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(MarketRewards)3922_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.MarketRewards)"
          },
          "t_struct(MarketRewards)3922_storage": {
            "label": "struct IncentivesControllerStorage.MarketRewards",
            "members": [
              {
                "label": "underlyingPrice",
                "type": "t_uint256"
              },
              {
                "label": "underlyingDecimals",
                "type": "t_uint256"
              },
              {
                "label": "marketRewardsPercentage",
                "type": "t_uint256"
              },
              {
                "label": "trancheARewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trancheBRewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trADistributionCounter",
                "type": "t_uint256"
              },
              {
                "label": "trBDistributionCounter",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3935_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo))"
          },
          "t_mapping(t_uint256,t_struct(RewardsInfo)3935_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo)"
          },
          "t_struct(RewardsInfo)3935_storage": {
            "label": "struct IncentivesControllerStorage.RewardsInfo",
            "members": [
              {
                "label": "periodFinish",
                "type": "t_uint256"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint256"
              },
              {
                "label": "rewardsDuration",
                "type": "t_uint256"
              },
              {
                "label": "finalTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool))))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => mapping(uint256 => bool))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "890098f833c1eeb8aaffb02ea431aa37fad39cea9a5309251a6151606906909d": {
      "address": "0x861F57C5287d99b0AE592c4fc963B0A669C7A7Ae",
      "txHash": "0xbf0c0e65d1dbf727723c2048bae0540b00e4c6b21a702996073ee4a1ff01118f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "marketsCounter",
            "type": "t_uint256",
            "src": "IncentivesControllerStorage.sol:43"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "rewardsTokenAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:45"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "mktHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:46"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "priceHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:47"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarkets",
            "type": "t_mapping(t_uint256,t_struct(Market)3807_storage)",
            "src": "IncentivesControllerStorage.sol:49"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarketsRewards",
            "type": "t_mapping(t_uint256,t_struct(MarketRewards)3822_storage)",
            "src": "IncentivesControllerStorage.sol:50"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheARewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3835_storage))",
            "src": "IncentivesControllerStorage.sol:53"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheBRewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3835_storage))",
            "src": "IncentivesControllerStorage.sol:54"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrAPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:56"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrBPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:57"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trARewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "IncentivesControllerStorage.sol:59"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trBRewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "IncentivesControllerStorage.sol:60"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "historicalRewardsTrAPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool))))",
            "src": "IncentivesControllerStorage.sol:62"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "historicalRewardsTrBPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool))))",
            "src": "IncentivesControllerStorage.sol:63"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Market)3807_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.Market)"
          },
          "t_struct(Market)3807_storage": {
            "label": "struct IncentivesControllerStorage.Market",
            "members": [
              {
                "label": "protocol",
                "type": "t_address"
              },
              {
                "label": "aTranche",
                "type": "t_address"
              },
              {
                "label": "bTranche",
                "type": "t_address"
              },
              {
                "label": "protocolTrNumber",
                "type": "t_uint256"
              },
              {
                "label": "balanceFactor",
                "type": "t_uint256"
              },
              {
                "label": "extProtocolPercentage",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(MarketRewards)3822_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.MarketRewards)"
          },
          "t_struct(MarketRewards)3822_storage": {
            "label": "struct IncentivesControllerStorage.MarketRewards",
            "members": [
              {
                "label": "underlyingPrice",
                "type": "t_uint256"
              },
              {
                "label": "underlyingDecimals",
                "type": "t_uint256"
              },
              {
                "label": "marketRewardsPercentage",
                "type": "t_uint256"
              },
              {
                "label": "trancheARewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trancheBRewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trADistributionCounter",
                "type": "t_uint256"
              },
              {
                "label": "trBDistributionCounter",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3835_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo))"
          },
          "t_mapping(t_uint256,t_struct(RewardsInfo)3835_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo)"
          },
          "t_struct(RewardsInfo)3835_storage": {
            "label": "struct IncentivesControllerStorage.RewardsInfo",
            "members": [
              {
                "label": "periodFinish",
                "type": "t_uint256"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint256"
              },
              {
                "label": "rewardsDuration",
                "type": "t_uint256"
              },
              {
                "label": "finalTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool))))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => mapping(uint256 => bool))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7f8eac2d427c898aa6945c196b4a63ffffc44428862669ce3ce61e6b9be19a8b": {
      "address": "0x26aeAe32e974dA91427894A43d5ce1E88B9cB50C",
      "txHash": "0xab653c96d30a7205f4262def67ac6a75ce250ed4239bf19b7112e5c8352d3708",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "marketsCounter",
            "type": "t_uint256",
            "src": "IncentivesControllerStorage.sol:43"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "rewardsTokenAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:45"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "mktHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:46"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "priceHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:47"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarkets",
            "type": "t_mapping(t_uint256,t_struct(Market)3795_storage)",
            "src": "IncentivesControllerStorage.sol:49"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarketsRewards",
            "type": "t_mapping(t_uint256,t_struct(MarketRewards)3810_storage)",
            "src": "IncentivesControllerStorage.sol:50"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheARewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3823_storage))",
            "src": "IncentivesControllerStorage.sol:53"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheBRewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3823_storage))",
            "src": "IncentivesControllerStorage.sol:54"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrAPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:56"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrBPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:57"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trARewards",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:59"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trBRewards",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:60"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Market)3795_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.Market)"
          },
          "t_struct(Market)3795_storage": {
            "label": "struct IncentivesControllerStorage.Market",
            "members": [
              {
                "label": "protocol",
                "type": "t_address"
              },
              {
                "label": "aTranche",
                "type": "t_address"
              },
              {
                "label": "bTranche",
                "type": "t_address"
              },
              {
                "label": "protocolTrNumber",
                "type": "t_uint256"
              },
              {
                "label": "balanceFactor",
                "type": "t_uint256"
              },
              {
                "label": "extProtocolPercentage",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(MarketRewards)3810_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.MarketRewards)"
          },
          "t_struct(MarketRewards)3810_storage": {
            "label": "struct IncentivesControllerStorage.MarketRewards",
            "members": [
              {
                "label": "underlyingPrice",
                "type": "t_uint256"
              },
              {
                "label": "underlyingDecimals",
                "type": "t_uint256"
              },
              {
                "label": "marketRewardsPercentage",
                "type": "t_uint256"
              },
              {
                "label": "trancheARewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trancheBRewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trADistributionCounter",
                "type": "t_uint256"
              },
              {
                "label": "trBDistributionCounter",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo))"
          },
          "t_mapping(t_uint256,t_struct(RewardsInfo)3823_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo)"
          },
          "t_struct(RewardsInfo)3823_storage": {
            "label": "struct IncentivesControllerStorage.RewardsInfo",
            "members": [
              {
                "label": "periodFinish",
                "type": "t_uint256"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint256"
              },
              {
                "label": "rewardsDuration",
                "type": "t_uint256"
              },
              {
                "label": "finalTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c877ac1012b9e753f0832af7f1f2d53ed6497549fe2de4498201e5a65eb43ce3": {
      "address": "0xcbA272Ad8A4276218c53De2522e7471EA77295FA",
      "txHash": "0xed79941adef6885169e840fed4e3ee1834e4c5c74f34440e7b00998a912836db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cdbdb1a1f59ea2257fb97b3ff08d61c549d13dc51f1deeb2a5608ff58b18ebaa": {
      "address": "0x5893F222422ee306feCb69412c63cc8D24395FEd",
      "txHash": "0x7040a91d61c39a3448cca5450464174e319ca981389454361493b17b0d8ca9e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PriceHelperStorage",
            "label": "controllerAddress",
            "type": "t_address",
            "src": "PriceHelperStorage.sol:20"
          },
          {
            "contract": "PriceHelperStorage",
            "label": "pairs",
            "type": "t_mapping(t_uint256,t_struct(Pair)4974_storage)",
            "src": "PriceHelperStorage.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Pair)4974_storage)": {
            "label": "mapping(uint256 => struct PriceHelperStorage.Pair)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Pair)4974_storage": {
            "label": "struct PriceHelperStorage.Pair",
            "members": [
              {
                "label": "externalProviderAddress",
                "type": "t_address"
              },
              {
                "label": "chLinkDecimals",
                "type": "t_uint256"
              },
              {
                "label": "reciprocalPrice",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f983c08c1316c3f65a33b00c50840160369ba54655d6c11fbc9cc83b8bcdea2a": {
      "address": "0x8A5a749C5E7CC3eD197F3d9B188609c361E0C8aE",
      "txHash": "0x59e948e7d8dadd1024c482877ee85129e6c99011fb297f4d4a0ddef9768767d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "marketsCounter",
            "type": "t_uint256",
            "src": "IncentivesControllerStorage.sol:43"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "rewardsTokenAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:45"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "mktHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:46"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "priceHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:47"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarkets",
            "type": "t_mapping(t_uint256,t_struct(Market)4118_storage)",
            "src": "IncentivesControllerStorage.sol:49"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarketsRewards",
            "type": "t_mapping(t_uint256,t_struct(MarketRewards)4133_storage)",
            "src": "IncentivesControllerStorage.sol:50"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheARewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)4146_storage))",
            "src": "IncentivesControllerStorage.sol:53"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheBRewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)4146_storage))",
            "src": "IncentivesControllerStorage.sol:54"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrAPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:56"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrBPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:57"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trARewards",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:59"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trBRewards",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:60"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Market)4118_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.Market)"
          },
          "t_struct(Market)4118_storage": {
            "label": "struct IncentivesControllerStorage.Market",
            "members": [
              {
                "label": "protocol",
                "type": "t_address"
              },
              {
                "label": "aTranche",
                "type": "t_address"
              },
              {
                "label": "bTranche",
                "type": "t_address"
              },
              {
                "label": "protocolTrNumber",
                "type": "t_uint256"
              },
              {
                "label": "balanceFactor",
                "type": "t_uint256"
              },
              {
                "label": "extProtocolPercentage",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(MarketRewards)4133_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.MarketRewards)"
          },
          "t_struct(MarketRewards)4133_storage": {
            "label": "struct IncentivesControllerStorage.MarketRewards",
            "members": [
              {
                "label": "underlyingPrice",
                "type": "t_uint256"
              },
              {
                "label": "underlyingDecimals",
                "type": "t_uint256"
              },
              {
                "label": "marketRewardsPercentage",
                "type": "t_uint256"
              },
              {
                "label": "trancheARewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trancheBRewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trADistributionCounter",
                "type": "t_uint256"
              },
              {
                "label": "trBDistributionCounter",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)4146_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo))"
          },
          "t_mapping(t_uint256,t_struct(RewardsInfo)4146_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo)"
          },
          "t_struct(RewardsInfo)4146_storage": {
            "label": "struct IncentivesControllerStorage.RewardsInfo",
            "members": [
              {
                "label": "periodFinish",
                "type": "t_uint256"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint256"
              },
              {
                "label": "rewardsDuration",
                "type": "t_uint256"
              },
              {
                "label": "finalTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
