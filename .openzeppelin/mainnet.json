{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb73567C2F39B21504aD4A5855Ec8b645e5Af0Bbf",
    "txHash": "0x08ad62c4189c7050babc6a1b98b2e740c9270b163bddc4667785ea6906c45560"
  },
  "proxies": [
    {
      "address": "0x90a4531912B3c46E740923D553200aAE543C4C8e",
      "txHash": "0xffa69d8de226ce46d078799834cd35ab4e376e63f052396663a779ffc6193be3",
      "kind": "transparent"
    },
    {
      "address": "0xd4165C55287A9f34479d2Feb30D0723a5556946C",
      "txHash": "0xd11ff98e7727466588df92bb00ed898e39d807e331eaaaf99ca2cfa70e608c91",
      "kind": "transparent"
    },
    {
      "address": "0x8C082809DEF6a3c1742D84553B9C6FF1DBC161C8",
      "txHash": "0xd09089c7071546ef1d7a49bed4984bff3f859dcdb89f5d76761de93ee2a078ce",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c877ac1012b9e753f0832af7f1f2d53ed6497549fe2de4498201e5a65eb43ce3": {
      "address": "0xFfcAfEE37e74669662fA414e7a4c7986D97EaDa8",
      "txHash": "0x99bd6efa5e33bc8fee8507c3b7270cc5e50deb79e9b932fd7d23c2971cf94492",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cdbdb1a1f59ea2257fb97b3ff08d61c549d13dc51f1deeb2a5608ff58b18ebaa": {
      "address": "0xb899aF7b891795b95d66A3C770Ac35F0db6e2888",
      "txHash": "0x1c1cd722b60062ece27e37f3904c2783ca29bc9197a9375a2f8efdc486d7402f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PriceHelperStorage",
            "label": "controllerAddress",
            "type": "t_address",
            "src": "PriceHelperStorage.sol:20"
          },
          {
            "contract": "PriceHelperStorage",
            "label": "pairs",
            "type": "t_mapping(t_uint256,t_struct(Pair)4844_storage)",
            "src": "PriceHelperStorage.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Pair)4844_storage)": {
            "label": "mapping(uint256 => struct PriceHelperStorage.Pair)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Pair)4844_storage": {
            "label": "struct PriceHelperStorage.Pair",
            "members": [
              {
                "label": "externalProviderAddress",
                "type": "t_address"
              },
              {
                "label": "chLinkDecimals",
                "type": "t_uint256"
              },
              {
                "label": "reciprocalPrice",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a328f4f48bf0dd69b107e6a83a489b5bced7dd0d580625508f26804eea61b5aa": {
      "address": "0xf859Bf7F30A0Cc3ca6A603D3440033378194cc39",
      "txHash": "0xf0549f688ff69ca70025fc89b8ae49cde24206f52ff5c15fbe77b9a3cf5cf304",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "marketsCounter",
            "type": "t_uint256",
            "src": "IncentivesControllerStorage.sol:43"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "rewardsTokenAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:45"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "mktHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:46"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "priceHelperAddress",
            "type": "t_address",
            "src": "IncentivesControllerStorage.sol:47"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarkets",
            "type": "t_mapping(t_uint256,t_struct(Market)3988_storage)",
            "src": "IncentivesControllerStorage.sol:49"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "availableMarketsRewards",
            "type": "t_mapping(t_uint256,t_struct(MarketRewards)4003_storage)",
            "src": "IncentivesControllerStorage.sol:50"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheARewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)4016_storage))",
            "src": "IncentivesControllerStorage.sol:53"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trancheBRewardsInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)4016_storage))",
            "src": "IncentivesControllerStorage.sol:54"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrAPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:56"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "userRewardPerTokenTrBPaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:57"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trARewards",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:59"
          },
          {
            "contract": "IncentivesControllerStorage",
            "label": "trBRewards",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "IncentivesControllerStorage.sol:60"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Market)3988_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.Market)"
          },
          "t_struct(Market)3988_storage": {
            "label": "struct IncentivesControllerStorage.Market",
            "members": [
              {
                "label": "protocol",
                "type": "t_address"
              },
              {
                "label": "aTranche",
                "type": "t_address"
              },
              {
                "label": "bTranche",
                "type": "t_address"
              },
              {
                "label": "protocolTrNumber",
                "type": "t_uint256"
              },
              {
                "label": "balanceFactor",
                "type": "t_uint256"
              },
              {
                "label": "extProtocolPercentage",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(MarketRewards)4003_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.MarketRewards)"
          },
          "t_struct(MarketRewards)4003_storage": {
            "label": "struct IncentivesControllerStorage.MarketRewards",
            "members": [
              {
                "label": "underlyingPrice",
                "type": "t_uint256"
              },
              {
                "label": "underlyingDecimals",
                "type": "t_uint256"
              },
              {
                "label": "marketRewardsPercentage",
                "type": "t_uint256"
              },
              {
                "label": "trancheARewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trancheBRewardsAmount",
                "type": "t_uint256"
              },
              {
                "label": "trADistributionCounter",
                "type": "t_uint256"
              },
              {
                "label": "trBDistributionCounter",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(RewardsInfo)4016_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo))"
          },
          "t_mapping(t_uint256,t_struct(RewardsInfo)4016_storage)": {
            "label": "mapping(uint256 => struct IncentivesControllerStorage.RewardsInfo)"
          },
          "t_struct(RewardsInfo)4016_storage": {
            "label": "struct IncentivesControllerStorage.RewardsInfo",
            "members": [
              {
                "label": "periodFinish",
                "type": "t_uint256"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint256"
              },
              {
                "label": "rewardsDuration",
                "type": "t_uint256"
              },
              {
                "label": "finalTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
